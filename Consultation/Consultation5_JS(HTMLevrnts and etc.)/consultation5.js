/**
 ДЕСТРУКТУРИЗАЦІЯ
 це можливість скорочувати код, і пришвидчувати написання і виконання коду
 */


/**Деструктуризація обєктів*/
/*
let kar = {

    name: 'Karina',
    age: 20,
    car: false,
    smoking: false,
    skills: ['JS', 'C', 'React', 'Node']

};

//Це звичайний спосіб діставання обєктів, це довго і займає багато коду, можна використовувати хіба коли треба витянути тільки один параметр
// let age = kar.age;
//
// let name = kar.name;
//
// let smoking = kar.smoking;

let name = 'Dima';
let age = '23';

//Таким чином ми деструктуризуэмо обєкти
//через дві крапки ми перейменовуєм змінну, в разі якщо в нас в коді дві однакових змінні
const {name: karyName, age: karyAge, smoking, ...oth} = kar;//... це спред оператор, створюється новий обєкт в який входить все що ми не викликали дкструктуризацією

console.log(name);
console.log(age);

console.log(karyName);
console.log(karyAge);
*/


/**Деструктуризація масивів*/
/*
let students = ['Mykola', 'Iryna', 'Roman', 'Oksana', 'Pavlo'];

//Це звичайний спосіб витягувати обєкти з масива
let Mykola = students[0];
let Iryna = students[1];

//Це деструктуризація масиву

//нульовий елемент буде выдповыдати нульовому обэкту масиву який ми деструктуризуєм
//... spread оператор створює масив в який входять всі інші не викликані елементи
//Якщо ми хочем опропустити якийсь елемент ми просто залишаєм паустоту між двома комами let [m2,, r2, ...other] = students;
let [m2, i2, r2, ...other] = students;

console.log(m2, i2, r2);
console.log(other);
*/


/**Структуризація*/
//За допомогою деструктуризації ми склеюєм елементи докупи.
let someObj = {...kar, phone: 'iPhone'};

console.log(someObj);
